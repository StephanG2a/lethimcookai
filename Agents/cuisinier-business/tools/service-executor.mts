import { tool } from "@langchain/core/tools";
import { z } from "zod";

// Import du websiteGenerator pour l'ex√©cution automatique
import { websiteGenerator } from "./website-generator.mts";

export const serviceExecutor = tool(
  async ({
    serviceTitle,
    serviceDescription,
    serviceTags,
    organizationName,
    priceRange,
    userRequest,
  }) => {
    try {
      console.log(`ü§ñ Ex√©cution automatique du service: ${serviceTitle}`);

      // Analyser le type de service demand√©
      const serviceAnalysis = analyzeService(
        serviceTitle,
        serviceDescription,
        serviceTags
      );
      const requestAnalysis = analyzeRequest(userRequest);

      let response = `# ü§ñ Ex√©cution Automatique de Service

## üìã Service R√©alis√©
**${serviceTitle}** ${organizationName ? `par ${organizationName}` : ""}
*Ex√©cut√© automatiquement par le Chef Cuisinier IA Business*
${priceRange ? `üí∞ Prix original: ${priceRange}` : ""}

## üí¨ Votre Demande
"${userRequest}"

## üéØ Analyse & R√©alisation

`;

      // G√©n√©rer la r√©ponse selon le type de service
      if (serviceAnalysis.isWebsiteService) {
        response += await generateWebsiteServiceResponse(
          userRequest,
          serviceTitle,
          serviceTags
        );
      } else if (serviceAnalysis.isMenuService) {
        response += generateMenuServiceResponse(userRequest, serviceTitle);
      } else if (serviceAnalysis.isBusinessService) {
        response += generateBusinessServiceResponse(userRequest, serviceTitle);
      } else if (serviceAnalysis.isVisualService) {
        response += generateVisualServiceResponse(userRequest, serviceTitle);
      } else if (serviceAnalysis.isNutritionService) {
        response += generateNutritionServiceResponse(userRequest, serviceTitle);
      } else if (serviceAnalysis.isWineService) {
        response += generateWineServiceResponse(userRequest, serviceTitle);
      } else {
        response += generateGeneralServiceResponse(userRequest, serviceTitle);
      }

      // Ajouter les recommandations et outils √† utiliser
      response += `

## üõ†Ô∏è Outils Recommand√©s pour Compl√©ter

Pour approfondir cette r√©alisation, je recommande d'utiliser mes outils sp√©cialis√©s :

${getRecommendedTools(serviceAnalysis, requestAnalysis)}

## ‚ú® Service R√©alis√© avec Succ√®s !

**Avantages de l'ex√©cution IA :**
- ‚úÖ **Imm√©diat** : Pas d'attente, r√©ponse instantan√©e
- ‚úÖ **Professionnel** : Niveau expert garanti
- ‚úÖ **√âconomique** : Service automatique inclus
- ‚úÖ **Personnalis√©** : Adapt√© √† votre demande sp√©cifique
- ‚úÖ **√âvolutif** : Modifications possibles √† tout moment

üí° **Besoin d'ajustements ?** Dites-moi "utilise l'outil [nom]" pour approfondir un aspect !

---
*Service ex√©cut√© le ${new Date().toLocaleString(
        "fr-FR"
      )} par le Chef Cuisinier IA Business*`;

      console.log(`‚úÖ Service "${serviceTitle}" ex√©cut√© avec succ√®s`);
      return response;
    } catch (error) {
      console.error("‚ùå Erreur lors de l'ex√©cution du service:", error);
      return `# ‚ùå Erreur d'Ex√©cution

D√©sol√©, je rencontre une difficult√© lors de l'ex√©cution du service "${serviceTitle}".

**Erreur :** ${error.message}

üí° **Solutions :**
- Reformulez votre demande avec plus de d√©tails
- D√©composez votre demande en √©tapes simples
- Utilisez directement mes outils sp√©cialis√©s

Je reste √† votre disposition pour vous aider !`;
    }
  },
  {
    name: "serviceExecutor",
    description: `Outil sp√©cialis√© pour l'ex√©cution automatique des services IA CULINAIRES compatible. 
    Analyse le service demand√© et fournit une r√©ponse compl√®te et professionnelle dans le domaine culinaire.
    Remplace efficacement un prestataire humain pour les services culinaires et gastronomiques automatisables.
    Recommande les outils sp√©cialis√©s appropri√©s pour approfondir la r√©alisation culinaire.
    RESTRICTION: Uniquement pour services li√©s √† la cuisine, restauration, alimentation.`,
    schema: z.object({
      serviceTitle: z
        .string()
        .describe("Titre du service culinaire √† ex√©cuter"),
      serviceDescription: z
        .string()
        .describe("Description d√©taill√©e du service culinaire"),
      serviceTags: z
        .array(z.string())
        .describe("Tags/mots-cl√©s culinaires du service"),
      organizationName: z
        .string()
        .optional()
        .describe("Nom de l'organisation culinaire prestataire"),
      priceRange: z
        .string()
        .optional()
        .describe("Fourchette de prix du service culinaire"),
      userRequest: z
        .string()
        .describe("Demande sp√©cifique culinaire de l'utilisateur"),
    }),
  }
);

// Fonction d'analyse du service
function analyzeService(title: string, description: string, tags: string[]) {
  const allText = `${title} ${description} ${tags.join(" ")}`.toLowerCase();

  return {
    isWebsiteService:
      /site|web|vitrine|internet|d√©veloppement|next\.js|react|html|css|javascript|responsive|seo/.test(
        allText
      ),
    isMenuService: /menu|carte|plat|recette|repas|d√Æner|d√©jeuner/.test(allText),
    isBusinessService:
      /business|plan|restaurant|entreprise|cr√©ation|conseil|√©tude|co√ªt|budget/.test(
        allText
      ),
    isVisualService: /logo|image|photo|visuel|design|graphique|identit√©/.test(
      allText
    ),
    isNutritionService:
      /nutrition|di√©t√©tique|calorie|√©quilibr|sant√©|r√©gime/.test(allText),
    isWineService: /vin|accord|sommelier|d√©gustation|cave/.test(allText),
    isMarketingService:
      /marketing|communication|social|template|vid√©o|publicit√©/.test(allText),
    isTechniqueService:
      /technique|cuisson|m√©thode|formation|apprentissage/.test(allText),
    serviceType: allText,
  };
}

// Fonction d'analyse de la demande
function analyzeRequest(request: string) {
  const req = request.toLowerCase();
  return {
    needsWebsite: /site|web|cr√©er|faire|d√©velopper|construire/.test(req),
    needsRecipes: /recette|plat|cuisine/.test(req),
    needsMenu: /menu|carte|repas/.test(req),
    needsWine: /vin|accord|boisson/.test(req),
    needsNutrition: /nutrition|calorie|sant√©/.test(req),
    needsBusiness: /business|plan|co√ªt|budget|entreprise/.test(req),
    needsVisuals: /logo|image|photo|design/.test(req),
    requestType: req,
  };
}

// G√©n√©rateurs de r√©ponses sp√©cialis√©es
function generateMenuServiceResponse(
  userRequest: string,
  serviceTitle: string
): string {
  return `### üçΩÔ∏è R√©alisation du Service Menu

J'ai analys√© votre demande "${userRequest}" dans le contexte du service "${serviceTitle}".

**Approche recommand√©e :**

1. **Analyse des besoins** : Vos pr√©f√©rences et contraintes
2. **Recherche de recettes** : S√©lection adapt√©e √† vos crit√®res
3. **Planification √©quilibr√©e** : Menu harmonieux et nutritif
4. **Accords recommand√©s** : Vins et boissons adapt√©s
5. **Instructions pratiques** : Guide de pr√©paration

**R√©alisation imm√©diate :**
- Conception d'un menu personnalis√© selon vos crit√®res
- S√©lection de recettes adapt√©es √† votre niveau
- Calcul des portions et liste de courses
- Conseils de timing et organisation`;
}

function generateBusinessServiceResponse(
  userRequest: string,
  serviceTitle: string
): string {
  return `### üìä R√©alisation du Service Business

J'ai trait√© votre demande "${userRequest}" pour le service "${serviceTitle}".

**M√©thodologie appliqu√©e :**

1. **Analyse de faisabilit√©** : √âtude de votre projet
2. **Calculs financiers** : Co√ªts et rentabilit√©
3. **√âtude de march√©** : Positionnement concurrentiel
4. **Plan d'action** : Strat√©gie d√©taill√©e
5. **Recommandations** : Conseils personnalis√©s

**Livrables fournis :**
- Analyse compl√®te de votre situation
- Projections financi√®res r√©alistes
- Strat√©gie de d√©veloppement adapt√©e
- Plan d'action concret et r√©alisable`;
}

function generateVisualServiceResponse(
  userRequest: string,
  serviceTitle: string
): string {
  return `### üé® R√©alisation du Service Visuel

J'ai con√ßu une solution visuelle pour "${userRequest}" dans le cadre du service "${serviceTitle}".

**Processus cr√©atif :**

1. **Brief cr√©atif** : Compr√©hension de vos besoins
2. **Concept visuel** : D√©veloppement de l'identit√©
3. **D√©clinaisons** : Applications multiples
4. **Optimisation** : Formats et usages
5. **Livraison** : Fichiers pr√™ts √† utiliser

**√âl√©ments cr√©√©s :**
- Concepts visuels personnalis√©s
- D√©clinaisons pour diff√©rents supports
- Recommandations d'usage
- Fichiers sources disponibles`;
}

function generateNutritionServiceResponse(
  userRequest: string,
  serviceTitle: string
): string {
  return `### ü•ó R√©alisation du Service Nutrition

J'ai analys√© vos besoins nutritionnels pour "${userRequest}" selon le service "${serviceTitle}".

**Approche nutritionnelle :**

1. **√âvaluation** : Analyse de vos besoins
2. **Planification** : Programme adapt√©
3. **√âquilibrage** : Apports optimis√©s
4. **Substitutions** : Alternatives saines
5. **Suivi** : Recommandations continues

**Solutions apport√©es :**
- Plan nutritionnel personnalis√©
- Calculs pr√©cis des apports
- Conseils d'adaptation
- Alternatives pour contraintes alimentaires`;
}

function generateWineServiceResponse(
  userRequest: string,
  serviceTitle: string
): string {
  return `### üç∑ R√©alisation du Service Vins

J'ai s√©lectionn√© des accords parfaits pour "${userRequest}" dans le cadre du service "${serviceTitle}".

**Expertise sommelier :**

1. **Analyse gustative** : Profils des mets
2. **S√©lection viticole** : Vins harmonieux
3. **Accords parfaits** : Combinaisons optimales
4. **Conseils service** : Temp√©rature et moment
5. **Alternatives** : Options budg√©taires

**Recommandations expertes :**
- Accords mets-vins personnalis√©s
- S√©lection de bouteilles pr√©cises
- Conseils de d√©gustation
- Alternatives selon budget`;
}

function generateGeneralServiceResponse(
  userRequest: string,
  serviceTitle: string
): string {
  return `### üéØ R√©alisation du Service

J'ai trait√© votre demande "${userRequest}" pour le service "${serviceTitle}" avec une approche globale.

**M√©thode d'ex√©cution :**

1. **Analyse compl√®te** : Compr√©hension des enjeux
2. **Approche multi-outils** : Utilisation de mes sp√©cialit√©s
3. **Solution int√©gr√©e** : R√©ponse coh√©rente
4. **Optimisation** : Ajustements fins
5. **Validation** : Contr√¥le qualit√©

**R√©sultat fourni :**
- Solution compl√®te et personnalis√©e
- Int√©gration de plusieurs expertises
- R√©ponse adapt√©e √† vos besoins sp√©cifiques
- Conseils pour optimiser le r√©sultat`;
}

function getRecommendedTools(
  serviceAnalysis: any,
  requestAnalysis: any
): string {
  const tools: string[] = [];

  if (serviceAnalysis.isWebsiteService || requestAnalysis.needsWebsite) {
    tools.push("- **websiteGenerator** : Pour cr√©er des sites web complets");
    tools.push("- **logoGenerator** : Pour l'identit√© visuelle du site");
    tools.push("- **culinaryImageGenerator** : Pour les visuels du site");
  }
  if (serviceAnalysis.isMenuService || requestAnalysis.needsMenu) {
    tools.push("- **menuPlanner** : Pour cr√©er des menus √©quilibr√©s d√©taill√©s");
  }
  if (requestAnalysis.needsRecipes) {
    tools.push(
      "- **externalRecipeApi** : Pour rechercher des recettes sp√©cifiques"
    );
  }
  if (serviceAnalysis.isNutritionService || requestAnalysis.needsNutrition) {
    tools.push(
      "- **nutritionCalculator** : Pour analyser les valeurs nutritionnelles"
    );
  }
  if (serviceAnalysis.isWineService || requestAnalysis.needsWine) {
    tools.push("- **winePairing** : Pour des accords mets-vins experts");
  }
  if (serviceAnalysis.isBusinessService || requestAnalysis.needsBusiness) {
    tools.push(
      "- **businessPlanGenerator** : Pour des business plans d√©taill√©s"
    );
    tools.push("- **costCalculator** : Pour calculer co√ªts et rentabilit√©");
    tools.push("- **marketAnalysis** : Pour analyser la concurrence");
  }
  if (serviceAnalysis.isVisualService || requestAnalysis.needsVisuals) {
    tools.push("- **logoGenerator** : Pour cr√©er des logos professionnels");
    tools.push(
      "- **culinaryImageGenerator** : Pour g√©n√©rer des images culinaires"
    );
    tools.push(
      "- **socialMediaTemplates** : Pour des templates r√©seaux sociaux"
    );
  }

  // Toujours proposer quelques outils de base si rien de sp√©cifique
  if (tools.length === 0) {
    tools.push("- **externalRecipeApi** : Pour des recettes personnalis√©es");
    tools.push("- **menuPlanner** : Pour planifier vos repas");
    tools.push(
      "- **nutritionCalculator** : Pour analyser l'√©quilibre nutritionnel"
    );
  }

  return tools.join("\n");
}

// Fonction pour g√©n√©rer une r√©ponse de service website
async function generateWebsiteServiceResponse(
  userRequest: string,
  serviceTitle: string,
  serviceTags: string[]
): Promise<string> {
  try {
    // Extraire les informations du service pour le websiteGenerator
    const restaurantName = extractRestaurantName(userRequest, serviceTitle);
    const restaurantType = extractRestaurantType(userRequest, serviceTags);
    const websiteType = extractWebsiteType(userRequest);
    const features = extractFeatures(userRequest, serviceTags);
    const colorScheme = extractColorScheme(userRequest);

    // Utiliser le websiteGenerator pour cr√©er le site
    const websiteResult = await websiteGenerator.invoke({
      restaurantName,
      restaurantType,
      websiteType,
      features,
      colorScheme,
      content: userRequest,
    });

    return `### üåê R√©alisation du Service Site Web

J'ai cr√©√© automatiquement votre site web "${serviceTitle}" selon votre demande "${userRequest}".

${websiteResult}

**üöÄ Service ex√©cut√© avec succ√®s !**
Votre site web est maintenant pr√™t √† √™tre personnalis√© et d√©ploy√©.`;
  } catch (error) {
    return `### ‚ùå Erreur lors de la g√©n√©ration du site web

Impossible de g√©n√©rer le site web automatiquement : ${error.message}

**üí° Solution :** Utilisez directement l'outil **websiteGenerator** avec des param√®tres plus sp√©cifiques.`;
  }
}

// Fonctions utilitaires pour extraire les param√®tres
function extractRestaurantName(
  userRequest: string,
  serviceTitle: string
): string {
  // Essayer d'extraire le nom du restaurant de la demande
  const nameMatch = userRequest.match(
    /pour (\w+)|restaurant (\w+)|chez (\w+)/i
  );
  if (nameMatch) {
    return nameMatch[1] || nameMatch[2] || nameMatch[3];
  }
  return "Mon Restaurant"; // Valeur par d√©faut
}

function extractRestaurantType(
  userRequest: string,
  serviceTags: string[]
): string {
  const request = userRequest.toLowerCase();

  if (/pizzeria|pizza/i.test(request)) return "Pizzeria";
  if (/brasserie|bi√®re/i.test(request)) return "Brasserie";
  if (/gastronomique|√©toil√©|fine dining/i.test(request))
    return "Restaurant gastronomique";
  if (/bistrot|bistro/i.test(request)) return "Bistrot";
  if (/caf√©|coffee/i.test(request)) return "Caf√©";
  if (/bar|cocktail/i.test(request)) return "Bar";

  // V√©rifier dans les tags
  for (const tag of serviceTags) {
    if (/restaurant|gastronomie/i.test(tag)) return "Restaurant";
    if (/pizza/i.test(tag)) return "Pizzeria";
    if (/caf√©|coffee/i.test(tag)) return "Caf√©";
  }

  return "Restaurant"; // Valeur par d√©faut
}

function extractWebsiteType(
  userRequest: string
): "vitrine" | "e-commerce" | "reservation" | "portfolio" {
  const request = userRequest.toLowerCase();

  if (/e-commerce|boutique|vente|commande/i.test(request)) return "e-commerce";
  if (/r√©servation|booking/i.test(request)) return "reservation";
  if (/portfolio|galerie|showcase/i.test(request)) return "portfolio";

  return "vitrine"; // Valeur par d√©faut
}

function extractFeatures(userRequest: string, serviceTags: string[]): string[] {
  const features: string[] = [];
  const request = userRequest.toLowerCase();
  const allTags = serviceTags.join(" ").toLowerCase();

  if (/r√©servation|booking|r√©server/i.test(request + " " + allTags)) {
    features.push("reservation");
  }
  if (/menu|carte/i.test(request + " " + allTags)) {
    features.push("menu-interactif");
  }
  if (/galerie|photo|image/i.test(request + " " + allTags)) {
    features.push("galerie");
  }
  if (/contact|nous contacter/i.test(request + " " + allTags)) {
    features.push("contact");
  }
  if (/seo|r√©f√©rencement|google/i.test(request + " " + allTags)) {
    features.push("seo");
  }
  if (/responsive|mobile|tablette/i.test(request + " " + allTags)) {
    features.push("responsive");
  }

  // Ajouter des fonctionnalit√©s de base
  if (features.length === 0) {
    features.push("contact", "menu-interactif");
  }

  return features;
}

function extractColorScheme(
  userRequest: string
): "elegant" | "moderne" | "rustique" | "minimaliste" | "chaleureux" {
  const request = userRequest.toLowerCase();

  if (/√©l√©gant|sophistiqu√©|chic|classe/i.test(request)) return "elegant";
  if (/moderne|contemporain|actuel/i.test(request)) return "moderne";
  if (/rustique|traditionnel|campagne|authentique/i.test(request))
    return "rustique";
  if (/minimaliste|simple|√©pur√©|clean/i.test(request)) return "minimaliste";
  if (/chaleureux|convivial|accueillant|cosy/i.test(request))
    return "chaleureux";

  return "moderne"; // Valeur par d√©faut
}
