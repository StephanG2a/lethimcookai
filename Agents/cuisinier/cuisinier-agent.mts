import { config } from "dotenv";

// Charger les variables d'environnement (.env.local en priorit√©)
config({ path: ".env.local" });

import { MemorySaver } from "@langchain/langgraph";
import { createReactAgent } from "@langchain/langgraph/prebuilt";
import { ChatOpenAI } from "@langchain/openai";

// Import de tous les outils depuis l'index
import {
  externalRecipeApi,
  nutritionCalculator,
  ingredientSubstitution,
  unitConverter,
  menuPlanner,
  winePairing,
  cookingTechniques,
} from "./tools/index.mts";

// Configuration du mod√®le avec v√©rification de la cl√© API
if (!process.env.OPENAI_API_KEY) {
  throw new Error(`
‚ùå Configuration manquante pour l'agent Basic

Pour utiliser l'agent Cuisinier Basic, vous devez configurer votre cl√© API OpenAI.

üõ†Ô∏è Solution :
1. Cr√©ez un fichier .env √† la racine du projet avec :
   OPENAI_API_KEY="your-openai-api-key-here"

2. Red√©marrez le serveur

üìö Documentation : Consultez le README.md pour plus d'informations.
  `);
}

const model = new ChatOpenAI({
  model: "gpt-4o-mini",
  temperature: 0.7,
});

// Tous les outils disponibles - FORMULE BASIC
const tools = [
  externalRecipeApi,
  nutritionCalculator,
  ingredientSubstitution,
  unitConverter,
  menuPlanner,
  winePairing,
  cookingTechniques,
];

// Configuration de l'agent avec m√©moire
const memory = new MemorySaver();

// Prompt syst√®me ultra-strict pour √©viter les doublons
const systemMessage = `Tu es un Chef Cuisinier IA expert - VERSION BASIC.

R√àGLE ABSOLUE : Si un outil r√©pond, retourne UNIQUEMENT sa r√©ponse EXACTEMENT comme elle est. N'ajoute RIEN.

Sp√©cialit√©s BASIC : recettes, nutrition, substitutions, conversions, menus, vins, techniques culinaires.

Ne reformule jamais. Ne commente jamais. Ne r√©p√®te jamais.`;

// Cr√©ation de l'agent
export const cuisinierAgent = createReactAgent({
  llm: model,
  tools: tools,
  checkpointSaver: memory,
  messageModifier: systemMessage,
});

// Fonction pour traiter les messages
export async function processMessage(
  message: string,
  userId: string = "default"
) {
  try {
    const thread = { configurable: { thread_id: userId } };

    console.log(
      `üë®‚Äçüç≥ Cuisinier Agent: Traitement de la demande pour l'utilisateur ${userId}`
    );
    console.log(`üìù Demande: "${message}"`);

    const response = await cuisinierAgent.invoke(
      { messages: [{ role: "user", content: message }] },
      thread
    );

    const lastMessage = response.messages[response.messages.length - 1];

    console.log(
      `‚úÖ Cuisinier Agent: R√©ponse g√©n√©r√©e (${lastMessage.content.length} caract√®res)`
    );

    // Analyser les outils utilis√©s pour le logging
    const toolsUsed = response.messages
      .filter((msg: any) => msg.tool_calls?.length > 0)
      .map((msg: any) => msg.tool_calls.map((call: any) => call.name))
      .flat();

    console.log(`üîß Outils utilis√©s: ${toolsUsed.join(", ") || "aucun"}`);

    return {
      success: true,
      response: lastMessage.content,
      toolsUsed: toolsUsed,
      threadId: userId,
      metadata: {
        responseLength: lastMessage.content.length,
        toolsCount: toolsUsed.length,
        timestamp: new Date().toISOString(),
      },
    };
  } catch (error) {
    console.error("‚ùå Erreur Cuisinier Agent:", error);

    // R√©ponse d'erreur enrichie
    const fallbackResponse = `# üî• Oups, petit souci en cuisine !

Je rencontre une difficult√© technique momentan√©e. Mais ne vous inqui√©tez pas, je reste √† votre disposition !

## üí° Exemples de ce que je peux faire pour vous :

### üçΩÔ∏è **Recherche et Recettes** :
- "Recette de coq au vin pour 6 personnes"
- "Plats v√©g√©tariens avec des lentilles"
- "Desserts sans gluten faciles"

### üìä **Nutrition et Sant√©** :
- "Calories d'une quiche lorraine"
- "Valeurs nutritionnelles de ma recette"
- "Menu √©quilibr√© pour sportif"

### üîÑ **Substitutions et Adaptations** :
- "Remplacer les ≈ìufs dans un g√¢teau"
- "Alternative v√©gane au beurre"
- "Recette sans lactose"

### üìè **Conversions et Mesures** :
- "Convertir 2 cups en grammes de farine"
- "180¬∞F en Celsius"
- "√âquivalence cuill√®res √† soupe"

### üìÖ **Planification de Menus** :
- "Menu de la semaine pour 4 personnes"
- "Repas budget √©tudiant"
- "Planning v√©g√©tarien 5 jours"

### üç∑ **Accords et Accompagnements** :
- "Vin avec un saumon grill√©"
- "Accompagnement pour b≈ìuf bourguignon"
- "Boisson sans alcool pour curry"

### üë®‚Äçüç≥ **Techniques Culinaires** :
- "Comment faire un risotto parfait"
- "Technique de l'√©mulsion"
- "R√©ussir la cuisson d'un steak"

Reformulez votre demande et je serai ravi de vous aider ! üç¥‚ú®`;

    return {
      success: false,
      error: error.message,
      response: fallbackResponse,
      threadId: userId,
      metadata: {
        errorType: error.name || "UnknownError",
        timestamp: new Date().toISOString(),
      },
    };
  }
}

// Fonction pour obtenir les statistiques de l'agent
export function getAgentStats() {
  return {
    name: "Chef Cuisinier IA Basic",
    version: "1.0.0 - Basic avec 7 outils sp√©cialis√©s",
    formule: "Basic (Essentiel culinaire)",
    tools: [
      {
        name: "externalRecipeApi",
        description:
          "Recherche de recettes via APIs multiples (Marmiton, Spoonacular, TheMealDB, Edamam)",
        category: "Basic - Recettes",
      },
      {
        name: "nutritionCalculator",
        description:
          "Calcul des valeurs nutritionnelles compl√®tes avec conseils sant√©",
        category: "Basic - Nutrition",
      },
      {
        name: "ingredientSubstitution",
        description:
          "Substitutions d'ingr√©dients pour allergies, r√©gimes et disponibilit√©",
        category: "Basic - Adaptations",
      },
      {
        name: "unitConverter",
        description:
          "Conversion d'unit√©s culinaires (poids, volume, temp√©rature) avec densit√©s",
        category: "Basic - Conversions",
      },
      {
        name: "menuPlanner",
        description:
          "Planification de menus √©quilibr√©s avec listes de courses et budgets",
        category: "Basic - Planification",
      },
      {
        name: "winePairing",
        description:
          "Accords mets et vins avec suggestions de bouteilles et conseils service",
        category: "Basic - Accords",
      },
      {
        name: "cookingTechniques",
        description:
          "Techniques culinaires avanc√©es avec explications d√©taill√©es et astuces chef",
        category: "Basic - Techniques",
      },
    ],
    capabilities: [
      "Recherche et analyse de recettes",
      "Calculs nutritionnels complets",
      "Substitutions intelligentes d'ingr√©dients",
      "Conversions d'unit√©s pr√©cises",
      "Planification de menus √©quilibr√©s",
      "Conseils accords mets et vins",
      "Ma√Ætrise des techniques culinaires",
    ],
    upgrades: {
      premium: "Ajoute la cr√©ation visuelle (logos, images, PDFs, templates)",
      business: "Ajoute la recherche de services et outils professionnels",
    },
  };
}

// Fonction pour r√©initialiser la m√©moire d'un utilisateur
export async function resetUserMemory(userId: string) {
  try {
    console.log(
      `üßπ R√©initialisation de la m√©moire culinaire pour l'utilisateur ${userId}`
    );
    return {
      success: true,
      message: `M√©moire culinaire r√©initialis√©e pour ${userId} - Tous les outils sont pr√™ts !`,
    };
  } catch (error) {
    console.error("‚ùå Erreur lors de la r√©initialisation:", error);
    return {
      success: false,
      error: error.message,
    };
  }
}
