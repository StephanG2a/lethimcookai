import { tool } from "@langchain/core/tools";
import { z } from "zod";
import { ChatOpenAI } from "@langchain/openai";
import OpenAI from "openai";

const chatgpt = new ChatOpenAI({
  model: "gpt-4o-mini",
  temperature: 0.8, // Cr√©atif pour le design
});

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export const logoGenerator = tool(
  async ({
    business_name,
    business_type,
    cuisine_style,
    color_preferences,
    style_preference,
    additional_elements,
  }) => {
    try {
      // D'abord, cr√©er une description d√©taill√©e du logo avec ChatGPT
      const designPrompt = `Tu es un designer graphique sp√©cialis√© dans l'identit√© visuelle culinaire. Cr√©e une description d√©taill√©e pour un logo avec :

üè™ **Nom de l'√©tablissement** : ${business_name}
üçΩÔ∏è **Type d'√©tablissement** : ${business_type}
üåç **Style de cuisine** : ${cuisine_style}
üé® **Pr√©f√©rences couleurs** : ${
        color_preferences || "Palette harmonieuse adapt√©e"
      }
‚ú® **Style souhait√©** : ${style_preference || "Moderne et professionnel"}
‚ûï **√âl√©ments sp√©ciaux** : ${additional_elements || "Aucun"}

Cr√©e une description TR√àS D√âTAILL√âE pour DALL-E incluant :

**üìê COMPOSITION :**
- Layout et disposition des √©l√©ments
- Proportions et √©quilibre visuel
- Style typographique pour le nom

**üé® STYLE VISUEL :**
- Palette de couleurs pr√©cise
- Style artistique (moderne, vintage, minimaliste, etc.)
- Ambiance et mood du design

**üç≥ √âL√âMENTS CULINAIRES :**
- Symboles ou ic√¥nes li√©s au type de cuisine
- √âl√©ments d√©coratifs appropri√©s
- R√©f√©rences culturelles si pertinentes

**üéØ FINALIT√â :**
- Adaptation pour diff√©rents supports
- Lisibilit√© et impact visuel
- Professionnalisme et m√©morabilit√©

IMPORTANT : R√©ponds ENTI√àREMENT en fran√ßais. √âvite l'anglais sauf termes techniques n√©cessaires. Termine par une description concise et pr√©cise.`;

      const designResponse = await chatgpt.invoke(designPrompt);

      // Cr√©er une description optimis√©e pour DALL-E en fran√ßais (traduction automatique)
      const dallePromptFr = `Design de logo professionnel pour "${business_name}", un ${business_type} sp√©cialis√© en cuisine ${cuisine_style}. Style ${
        style_preference || "moderne et professionnel"
      } avec ${
        color_preferences || "palette de couleurs harmonieuse"
      }. Design propre, m√©morable et adaptable pour l'image de marque d'un restaurant. Illustration haute qualit√© de style vectoriel. ${
        additional_elements || ""
      }`;

      // Traduire en anglais pour DALL-E (qui fonctionne mieux en anglais)
      const optimizedPrompt = `Professional logo design for "${business_name}", a ${business_type} specializing in ${cuisine_style} cuisine. ${
        style_preference || "Modern and professional"
      } style with ${
        color_preferences || "harmonious color palette"
      }. Clean, memorable, scalable design suitable for restaurant branding. High quality, vector-style illustration. ${
        additional_elements || ""
      }`;

      // G√©n√©rer l'image avec DALL-E
      console.log("üé® G√©n√©ration du logo avec DALL-E...");
      const dalleResponse = await openai.images.generate({
        model: "dall-e-3",
        prompt: optimizedPrompt,
        n: 1,
        size: "1024x1024",
        quality: "standard",
        response_format: "url",
      });

      const imageUrl = dalleResponse.data?.[0]?.url;

      if (!imageUrl) {
        throw new Error("Aucune image g√©n√©r√©e par DALL-E");
      }

      // Pr√©parer la r√©ponse avec m√©tadonn√©es pour l'interface
      const fullResponse = `üé® **Logo cr√©√© avec succ√®s pour "${business_name}"** ‚úÖ

**üìã BRIEF CR√âATIF :**
‚Ä¢ √âtablissement : ${business_name} (${business_type})
‚Ä¢ Cuisine : ${cuisine_style}  
‚Ä¢ Style : ${style_preference || "Moderne et professionnel"}
‚Ä¢ Couleurs : ${color_preferences || "Palette harmonieuse"}

**üñºÔ∏è VOTRE LOGO :**

**Logo ${business_name}** - G√©n√©r√© par DALL-E 3
[Image ci-dessus : R√©solution 1024x1024px]

**üí° CONCEPT CR√âATIF :**
${(typeof designResponse.content === "string"
  ? designResponse.content
  : String(designResponse.content)
)
  .split("DALL-E")[0]
  .trim()
  .replace(/\*\*üé® STYLE VISUEL\s*:\*\*/g, "**üé® STYLE VISUEL :**")}

**üéØ RECOMMANDATIONS :**
‚Ä¢ D√©clinaisons : horizontale/verticale, monochrome, simplifi√©e
‚Ä¢ Formats : PNG HD, SVG vectoriel, favicon web
‚Ä¢ Utilisations : carte de visite, enseigne, site web, r√©seaux sociaux

---
**M√âTADONN√âES_IMAGE:** ${JSON.stringify({
        url: imageUrl,
        alt: `Logo ${business_name}`,
        title: `Logo ${business_name} - ${cuisine_style}`,
        filename: `logo-${business_name
          .toLowerCase()
          .replace(/\s+/g, "-")}.png`,
      })}

Le logo est pr√™t ! Voulez-vous des variantes ou des ajustements ?`;

      return fullResponse;
    } catch (error) {
      console.error("Erreur g√©n√©ration logo:", error);

      // Message d'erreur d√©taill√© selon le type d'erreur
      if (error.message?.includes("DALL-E")) {
        return `‚ùå Erreur lors de la g√©n√©ration d'image DALL-E pour "${business_name}". V√©rifiez votre cl√© API OpenAI.`;
      }

      return `‚ùå Impossible de cr√©er le logo pour "${business_name}". 
      
**Probl√®me possible :**
- Cl√© API OpenAI manquante ou invalide
- Connexion internet requise
- Description trop complexe pour DALL-E

**Solution :** V√©rifiez votre configuration et r√©essayez.`;
    }
  },
  {
    name: "logoGenerator",
    description:
      "G√©n√©ration de concepts de logos professionnels pour √©tablissements culinaires avec descriptions optimis√©es pour DALL-E",
    schema: z.object({
      business_name: z.string().describe("Nom de l'√©tablissement ou du chef"),
      business_type: z
        .string()
        .describe(
          "Type d'√©tablissement (restaurant, bistrot, food truck, chef priv√©, etc.)"
        ),
      cuisine_style: z
        .string()
        .describe(
          "Style de cuisine (fran√ßaise, italienne, fusion, v√©g√©tarienne, etc.)"
        ),
      color_preferences: z
        .string()
        .optional()
        .describe("Pr√©f√©rences de couleurs ou palette souhait√©e"),
      style_preference: z
        .string()
        .optional()
        .describe(
          "Style visuel souhait√© (moderne, vintage, minimaliste, rustique, etc.)"
        ),
      additional_elements: z
        .string()
        .optional()
        .describe(
          "√âl√©ments sp√©ciaux √† inclure (symboles, r√©f√©rences culturelles, etc.)"
        ),
    }),
  }
);
